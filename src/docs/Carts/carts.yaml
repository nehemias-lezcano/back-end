paths:
  /api/carts:
    get:
      summary: Get all carts
      tags:
        - Carts
      responses:
        "200":
          description: Carts list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
          
        "404":
          description: Did not find any Cart
        "401":
          description: Unauthorized
    post:
      summary: Create an empty cart
      tags:
        - Carts
      responses:
        "200":
          description: Create an empty Cart and return de ID
        "500":
          description: Database error
        "401":
          description: Unauthorizated

  /api/carts/{cid}:
    get:
      summary: Get cart by ID
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: the cid is the cart Id we are looking for
          schema: 
            type: string
      responses:
        "200":
          description: Cart found
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  status:
                    type: string
                  message:
                    type: string
                  success:
                    type: boolean
                  payload:
                    $ref: '#/components/schemas/Cart'
                    
        "404":
          description: Did not found product
    put:
      summary: Update products in Cart
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: the cid is the cart Id we want to update
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              type: array
              items:
                type: object
                properties:
                  product:
                    type: string
                    example: 64614d656a2006995b576ae6
                  quantity:
                    type: integer
                    example: 15
      responses:
        "200":
          description: Cart updated
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Carrito actualizado
                  payload:
                    $ref: '#/components/schemas/Cart'
                  succes:
                    type: boolean
                    example: true

        "404":
          description: Not found
        "400":
          description: Ivalid type error
        "401":
          description: Unauthorized
    
    delete:
      summary: Delete cart
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: the cid is the cart Id we want to delete
          schema: 
            type: string
      responses:
        "200":
          description: Cart deleted
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: success
                    message:
                      type: string
                      example: Carrito eliminado
                    payload:
                      $ref: '#/components/schemas/Cart'

        "404":
          description: Not found
        "401":
          description: Unauthorized

  /api/carts/{cid}/product/{pid}:
    post:
      summary: add Product tu cart
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: the cid is the cart Id where we want to add a product
          schema: 
            type: string
        - name: pid
          in: path
          required: true
          description: the pid is the product we want to add to cart
          schema: 
            type: string
      responses:
        "200":
          description: Product Added
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: success
                    message:
                      type: string
                      example: Producto agregado al carrito
                    success:
                      type: boolean
                      example: true
                    payload:
                      $ref: '#/components/schemas/Cart'
        "404":
          description: Cant find any Cart or Products 
        "401": 
          description: Unauthorized
    put: 
      summary: Modify a product in the cart
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: the cid is the cart Id where we want to add a product
          schema: 
            type: string
        - name: pid
          in: path
          required: true
          description: the pid is the product we want to add to cart
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  example: 2
      responses:
        "200":
          description: Product modified
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: success
                    message:
                      type: string
                      example: Producto actualizado
                    payload:
                      $ref: '#/components/schemas/Cart'
                    success:
                      type: boolean
                      example: true

        "400":
          description: Ivalid type error
        "404": 
          description: Cart or product not found
        "401": 
          description: Unauthorized

    delete:
      summary: Delete a Product
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: the cid is the cart Id where is the product we want to delete
          schema: 
            type: string
        - name: pid
          in: path
          required: true
          description: the pid is the product we want to delete of the cart
          schema: 
            type: string
      responses:
        "200":
          description: Product Deleted from cart
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: success
                    message:
                      type: string
                      example: Producto eliminado
                    payload:
                      $ref: '#/components/schemas/Cart'
                    success:
                      type: boolean
                      example: true
        "404":
          description: Product or Cart not found
        "401":
          description: Unauthorized
  
  /api/carts/{cid}/purchase:
    post:
      summary: Purchase a cart
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: the cid is the cart Id we want to purchase
          schema: 
            type: string
      responses:
        "200":
          description: Cart Purchased
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Succes
                  payload:
                    type: object
                    properties:
                      ticket:
                        type: object
                        properties:
                          code:
                            type: string
                            example: 16decd41-c550-4ef8-881d-bef5a5b1f385
                          amount:
                            type: number
                            example: 111
                          purchaser:
                            type: string
                            example: adminCoder@coder.com
                          _id:
                            type: string
                            example: 64e68a52705e7c3ec28bc307
                          purchase_datetime:
                            type: string
                            example: 2023-08-23T22:38:10.805Z
                      updatedCart:
                        $ref: '#/components/schemas/Cart'
        "404":
          description: Cart or Product not found
        "401":
          description: Unauthorized              

      
components:
  schemas:
    CartProduct:
      type: object
      properties:
        product:
          type: string
        quantity:
          type: integer
          description: Quantity of the product in the cart
          example: 15

        
    Cart:
      type: object
      properties:
        id:
          type: string
          description: Cart ID
          example: 432dgrrgo4344fef
        products:
          type: array
          description: Products in Cart
          items:
            type: string
      example:
            id: "cart123"
            products:
              - product:
                  id: "product123"
                  title: "Sample Product 1"
                  category: "Electronics"
                  price: 499.99
                  thumbnail: ["thumbnail1.jpg", "thumbnail2.jpg"]
                  stock: 50
                  code: "PROD123"
                  status: true
                  owner: "user123"
                quantity: 2
              - product:
                  id: "product456"
                  title: "Sample Product 2"
                  category: "Clothing"
                  price: 29.99
                  thumbnail: ["thumbnail3.jpg", "thumbnail4.jpg"]
                  stock: 25
                  code: "PROD456"
                  status: true
                  owner: "user456"
                quantity: 1




        



